{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Room1 from '../components/room1.js';\nimport Room2 from '../components/room2.js';\nimport Room3 from '../components/room3.js';\nimport { Room4, Child } from '../components/room4.js';\n\nvar Parent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Parent, _React$Component);\n\n  function Parent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Parent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Parent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"receiveChildValue\", function (value) {\n      console.log(\"Parent received value from child: \" + value); // value is 42\n    });\n\n    return _this;\n  }\n\n  _createClass(Parent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", null, React.createElement(Room1, this.props), React.createElement(Room2, this.props), React.createElement(Room3, this.props), React.createElement(Room4, this.props), React.createElement(Child, {\n        fromChildToParentCallback: this.receiveChildValue\n      }));\n    }\n  }]);\n\n  return Parent;\n}(React.Component);\n\nexport default Parent; // <FieldEditor ref={this.FieldEditor1} />;\n// const Child = ({fromChildToParentCallback}) => (\n//   <div onClick={() => fromChildToParentCallback(42)}>\n//     Click me\n//   </div>\n// );\n// class Parent extends React.Component {\n//   receiveChildValue = (value) => {\n//     console.log(\"Parent received value from child: \" + value); // value is 42\n//   };\n//   render() {\n//     return (\n//       <Child fromChildToParentCallback={this.receiveChildValue}/>\n//     )\n//   }\n// }","map":null,"metadata":{},"sourceType":"module"}